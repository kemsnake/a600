<?php

define('RBK_MONEY_ACTION_URL', 'https://rbkmoney.ru/acceptpurchase.aspx');
define('RBK_MONEY_IP_LIST', serialize(array('46.38.182.208', '46.38.182.209', '46.38.182.210', '89.111.188.128', '89.111.188.129', '94.236.107.4', '94.236.107.1', '95.215.102.166')));
define('RBK_MONEY_STATUS_PROCESS', 3);
define('RBK_MONEY_STATUS_SUCCESS', 5);

/**
 * Implements hook_permission().
 */
function rbk_money_permission() {
  return array(
    'access config' => array(
      'title' => t('Administer module settings'),
      'description' => ''
    ),
    'administer payments' => array(
      'title' => t('Administer payments'),
      'description' => ''
    ),
    'create payment order' => array(
      'title' => t('Create RBK Money payment order'),
      'description' => ''
    ),
    'make payment' => array(
      'title' => t('Make RBK Money payment'),
      'description' => ''
    ),
  );
}

/**
 * Implements hook_menu().
 */
function rbk_money_menu() {
  $items['rbk_money/status'] = array(
    'title' => 'Internal Data',
    'page callback' => 'rbk_money_status',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/rbk_money'] = array(
    'title' => 'RBK Money',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/rbk_money/settings'] = array(
    'title' => 'Settings',
    'description' => 'RBK Money configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rbk_money_settings'),
    'access arguments' => array('access config'),
    'file' => 'rbk_money.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/*
 * Process response from RBK Money's server
 */
function rbk_money_status() {
  header("HTTP/1.0 200 OK");

  /* Check for allowed IP */
  if (variable_get('rbk_money_ip', 0) == 1) {
    $allowed_ip = unserialize(RBK_MONEY_IP_LIST);
    if (!in_array($_SERVER['REMOTE_ADDR'], $allowed_ip)) {
      watchdog("rbk_money", "Error with remote IP address = %ip. The remote address of POST data does not match a valid RBK Money IP address. Possible fraud", array('%ip' => ip_address(), WATCHDOG_WARNING));
      exit();
    }
  }

  foreach ($_POST as $key => $val) {
    if($key == 'paymentStatus' || $key == 'orderId'){
      $response[$key] = (int) $val;
    } else {
      $response[$key] = $val;
    }
  }

  $status_termin = ($response['paymentStatus'] == RBK_MONEY_STATUS_SUCCESS) ? t('successful') : t('processing');

  if (variable_get('rbk_money_log', 1) == 1) {
    $log = var_export($response, TRUE);
    watchdog('rbk_money', "Payment #%pid {$status_termin}; Data: <pre>%log</pre>", array('%log' => $log, '%pid' => $response['orderId']));
  }

  if (isset($response['hash'])) {
    $order = rbk_money_payment_load($response['orderId']);

    $string = variable_get('rbk_money_simple_eshopId', '') .
      '::' . $response['orderId'] .
      '::' . $response['serviceName'] .
      '::' . $response['eshopAccount'] .
      '::' . number_format($order['amount'], 2, '.', '') .
      '::' . variable_get('rbk_money_simple_recipientCurrency', 'RUR') .
      '::' . $response['paymentStatus'] . '::' . $response['userName'] .
      '::' . $response['userEmail'] .
      '::' . $response['paymentData'] .
      '::' . variable_get('rbk_money_simple_secretKey', '');

    $hash_algo = variable_get('rbk_money_hash', 'md5');
    $crc = hash($hash_algo, $string);

    if ($response['hash'] == $crc) {
      switch ($response['paymentStatus']) {
        case RBK_MONEY_STATUS_PROCESS:
          rbk_money_payment_enroll($response['orderId'], RBK_MONEY_STATUS_PROCESS);
          break;
        case RBK_MONEY_STATUS_SUCCESS:
          rbk_money_payment_enroll($response['orderId'], RBK_MONEY_STATUS_SUCCESS);
          break;
      }
    }
    elseif ($response['hash'] !== $crc) {
      watchdog("rbk_money", "Payment #%pid control hash error. Possible fraud. String %s", array('%pid' => $response['orderId'], '%s' => $string), WATCHDOG_WARNING);
    }
  }

}

/*
 * Store payment details in DB
 * @param
 *  array()
 *  required: $params['amount']
 * @return
 *  payment ID
 */
function rbk_money_payment_save($params) {
  if (!is_array($params)) {
    form_set_error('', t('Can not create payment. Please contact site administrator for further assistance.'));
    return FALSE;
  }

  if (!isset($params['pid'])) {
    if(!isset($params['amount'])){
      form_set_error('', t('Can not create payment. Please specify payment amount value'));
      return FALSE;
    }

    if(!isset($params['description'])){
      $params['description'] = '';
    }

    $pid = db_insert('rbk_money')->fields(array(
      'price' => $params['price'],
      'count' => $params['count'],
      'amount' => $params['amount'],
      'nid' => $params['nid'],
      'created' => REQUEST_TIME,
      'changed' => REQUEST_TIME,
    ))->execute();
    return $pid;
  }
  else {
    db_update('rbk_money')
      ->fields(array(
        'fio' => $params['fio'],
        'address' => $params['address'],
        'email' => $params['user_email'],
        'phone' => $params['phone'],
        'changed' => REQUEST_TIME,
      ))
      ->condition('pid', $params['pid'])
      ->execute();
  }
}

/*
 * Load payment details from DB
 */
function rbk_money_payment_load($pid) {
  $result = db_select('rbk_money', 'r')
    ->fields('r', array())
    ->condition('r.pid', (int) $pid, '=')
    ->execute()
    ->fetchAssoc();
  return $result;
}

/*
 * Enroll payment (set status 5 or 3)
 */
function rbk_money_payment_enroll($pid, $status = RBK_MONEY_STATUS_SUCCESS){
  $pid = (int) $pid;
  if ($pid > 0){
    db_update('rbk_money')
      ->fields(array('status' => $status, 'changed' => REQUEST_TIME,))
      ->condition('pid', $pid, '=')
      ->execute();
  }
  if($status == RBK_MONEY_STATUS_SUCCESS){
    watchdog("rbk_money", "Payment #%pid enrolled", array('%pid' => $pid));
  }
}

/*
 * Delete payment from DB
 */
function rbk_money_payment_delete($pid){
  $pid = (int) $pid;
  if ($pid > 0){
    db_delete('rbk_money')
      ->condition('pid', $pid, '=')
      ->execute();
  }
  watchdog("rbk_money", "Payment #%pid deleted", array('%pid' => $pid));
}